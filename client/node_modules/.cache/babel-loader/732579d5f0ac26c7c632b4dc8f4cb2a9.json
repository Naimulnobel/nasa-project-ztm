{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar semiWithNl = /;\\n/;\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\n\nexports['default'] = function (cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n\n    if (colonIndex === -1) {\n      (0, _warning2['default'])(false, 'Malformed CSS string \"%s\"', decl);\n      continue;\n    }\n\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n\n  return style;\n};","map":{"version":3,"sources":["/home/nobel/Documents/nasa-project/client/node_modules/jss-template/lib/parse.js"],"names":["Object","defineProperty","exports","value","_warning","require","_warning2","_interopRequireDefault","obj","__esModule","semiWithNl","cssText","style","split","i","length","decl","trim","colonIndex","indexOf","prop","substr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIE,UAAU,GAAG,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAR,OAAO,CAAC,SAAD,CAAP,GAAqB,UAAUS,OAAV,EAAmB;AACtC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAGF,OAAO,CAACE,KAAR,CAAcH,UAAd,CAAZ;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,IAAI,GAAG,CAACH,KAAK,CAACC,CAAD,CAAL,IAAY,EAAb,EAAiBG,IAAjB,EAAX;AAEA,QAAI,CAACD,IAAL,EAAW;AACX,QAAIE,UAAU,GAAGF,IAAI,CAACG,OAAL,CAAa,GAAb,CAAjB;;AACA,QAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,OAAC,GAAGZ,SAAS,CAAC,SAAD,CAAb,EAA0B,KAA1B,EAAiC,2BAAjC,EAA8DU,IAA9D;AACA;AACD;;AACD,QAAII,IAAI,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeH,UAAf,EAA2BD,IAA3B,EAAX;AACA,QAAId,KAAK,GAAGa,IAAI,CAACK,MAAL,CAAYH,UAAU,GAAG,CAAzB,EAA4BD,IAA5B,EAAZ;AACAL,IAAAA,KAAK,CAACQ,IAAD,CAAL,GAAcjB,KAAd;AACD;;AACD,SAAOS,KAAP;AACD,CAjBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar semiWithNl = /;\\n/;\n\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\n\nexports['default'] = function (cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n    if (colonIndex === -1) {\n      (0, _warning2['default'])(false, 'Malformed CSS string \"%s\"', decl);\n      continue;\n    }\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n  return style;\n};"]},"metadata":{},"sourceType":"script"}